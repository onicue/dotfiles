#!/bin/bash

CURRENT_COLOR='\033[32m'
RESET='\033[0m'
TMP_FILE_NAME="/tmp/tmux_tex_tmp"
SINGLE_TEMP_FILE=true
DEFAULT_COMMANDS="00" # hide hidden files and don't use ls command

select_file(){
  local tmp=$1
  local command_dir="$HOME/.config/tmux/scripts/tools/tex_command_picker"

  if [ ! -x "$command_dir" ]; then
    echo "Error: Command directory $command_dir does not exist or is not executable."
    exit 1
  fi

  local selected_file=$($command_dir "${tmp}" | fzf --tmux --layout=reverse \
    --bind "ctrl-h:reload($command_dir ${tmp} h)" \
    --bind "ctrl-f:reload($command_dir ${tmp} f)")

  if [ -n "$selected_file" ]; then
    if [ -d "$selected_file" ]; then
      cd "$selected_file" || exit
      selected_file=$(select_file "$tmp")
    fi
    echo "$(realpath "$selected_file")"
  fi
}

get_pane(){
  local current_pane
  local panes_list
  local sorted_panes_list

  current_pane=$(tmux display-message -p '#S:#I.#P')
  panes_list=$(tmux list-panes -a -F "#S:#I.#P #{pane_title} [#{pane_current_command}] #{?#{==:#S:#I.#P,$current_pane},${CURRENT_COLOR}current${RESET},}")

  sorted_panes_list=$(echo "$panes_list" | grep "$current_pane"; echo "$panes_list" | grep -v "$current_pane")

  echo $(echo -e "$sorted_panes_list" \
    | fzf --tmux --ansi --prompt='Select pane: ' --preview 'tmux capture-pane -e -p -t $(echo {} | awk "{print \$1}")' --bind='ctrl-p:toggle-preview' \
    | awk '{print $1}')
}

open_in_pane(){
  local pane_id=$1
  local file=$2
  local file_type

  file_type=$(file --mime-type -b "$file")

  case $file_type in
    text/*)
      local pane_content
      pane_content=$(tmux list-panes -t "$pane_id" -F "#{pane_current_command}")
      if echo "$pane_content" | grep -q 'nvim'; then
        tmux send-keys -t "$pane_id" ":e $file" C-m
      else
        tmux send-keys -t "$pane_id" "nvim $file" C-m
      fi
      ;;
    *)
      echo "Unsupported file type: $file_type"
      ;;
  esac
}

main(){
  local tmp
  local output

  if $SINGLE_TEMP_FILE; then
    if [ ! -f "$TMP_FILE_NAME" ]; then
      echo "${DEFAULT_COMMANDS}" > "$TMP_FILE_NAME"
    fi
    tmp=$TMP_FILE_NAME
  else
    tmp=$(mktemp)
  fi

  output=$(select_file "$tmp")

  if ! $SINGLE_TEMP_FILE; then
    rm -f "$tmp"
  fi

  if [ -n "$output" ]; then
    local pane_id
    pane_id=$(get_pane)
    if [ -n "$pane_id" ]; then
      open_in_pane "$pane_id" "$output"
    fi
  fi
}

main
